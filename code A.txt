<!DOCTYPE html>

<html lang="th">
<head>
<meta charset="utf-8"/>
<title>Roleplay Test - ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
<link href="data:," rel="icon"/>
<meta content="width=device-width, initial-scale=1" name="viewport"/></head>
<body class="bg-light">
<div class="text-center mb-4" id="userFormContainer">
<h4 class="text-white mb-3">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h4>
<input class="form-control mb-2" id="userNameInput" placeholder="‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•" required="" type="text"/>
<button class="btn btn-primary" id="startTestBtn">‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö</button>
</div>

<div class="container-fluid py-5">
<h2 class="mb-4 text-center">Roleplay Test ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô</h2>
<div class="mb-4" id="test-section">
<h4 id="section-title">‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÇ‡∏ô‡πâ‡∏°‡∏ô‡πâ‡∏≤‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏ï‡πâ‡∏ô‡∏™‡∏≤‡∏¢</h4>
<p class="lead" id="question-text"></p>
<button class="btn btn-primary mb-2 w-100 mb-2" onclick="startRecording()">üéôÔ∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á</button>
<button class="btn btn-danger mb-2 w-100 mb-2" onclick="stopRecording()">‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
<audio class="mb-2 w-100 mb-2" controls="" id="employee-response"></audio>
<a class="btn btn-outline-success mb-3 w-100 mb-2" download="" href="#" id="download-link">‚¨áÔ∏è ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á</a>
<button class="btn btn-success w-100 mb-2" onclick="nextQuestion()">‚û°Ô∏è ‡∏Ç‡πâ‡∏≠‡∏ï‡πà‡∏≠‡πÑ‡∏õ</button>
</div>
<div class="mt-4">
<button class="btn btn-outline-secondary me-2 w-100 mb-2" onclick="startPart('part1')">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1</button>
<button class="btn btn-outline-secondary me-2 w-100 mb-2" onclick="startPart('part2')">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2</button>
<button class="btn btn-outline-secondary w-100 mb-2" onclick="startPart('part3')">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3</button>
</div>
</div>
<script type="module">
    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
    import { v4 as uuidv4 } from 'https://cdn.jsdelivr.net/npm/uuid@8.3.2/dist/esm-browser/index.js';

    const supabaseUrl = 'https://wzwyotzzxycqfwercakh.supabase.co';
    const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind6d3lvdHp6eHljcWZ3ZXJjYWtoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwNTg3MTMsImV4cCI6MjA3MjYzNDcxM30.lgiAf9oBUqsaWGb3u_80wuoKAODQHE_lIBxpGumhrno';
    const supabase = createClient(supabaseUrl, supabaseKey);

    const questions = {
      part1: [
        { text: "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏ï‡πâ‡∏ô‡∏™‡∏≤‡∏¢" },
        { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡∏∏‡∏¢‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏™‡∏≤‡∏¢‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏ß‡∏•‡∏≤" },
        { text: "‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" },
        { text: "‡πÑ‡∏°‡πà‡πÑ‡∏ß‡πâ‡πÉ‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" },
        { text: "‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß" },
        { text: "‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ" },
        { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà" },
        { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ç‡∏±‡∏ö‡∏£‡∏ñ‡∏≠‡∏¢‡∏π‡πà" },
        { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡∏∏‡∏¢‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ä‡πâ‡∏≤" },
        { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÇ‡∏ó‡∏£‡∏°‡∏≤‡∏ö‡πà‡∏≠‡∏¢‡∏°‡∏≤‡∏Å" },
        { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å ‡πÑ‡∏°‡πà‡∏ü‡∏±‡∏á" },
        { text: "‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏°‡∏µ‡πÄ‡∏¢‡∏≠‡∏∞‡πÅ‡∏•‡πâ‡∏ß" },
        { text: "‡πÉ‡∏Ñ‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏°‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠" },
        { text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß" },
        { text: "‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï" },
        { text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏õ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß" },
        { text: "‡∏°‡∏¥‡∏à‡∏â‡∏≤‡∏ä‡∏µ‡∏û‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡πà‡∏≤‡∏ß" }
      ],
      part2: [
        { text: "‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡πÇ‡∏£‡∏Ñ‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
        { text: "‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡πÄ‡∏≠‡∏Å‡∏ä‡∏ô‡∏à‡∏∞‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏´‡∏°?" },
        { text: "‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà?" },
        { text: "‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
        { text: "‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á?" },
        { text: "‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡πÑ‡∏´‡∏°?" },
        { text: "‡∏°‡∏µ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠‡∏Ñ‡∏≠‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
        { text: "‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∏‡∏Å‡∏õ‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
        { text: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°?" },
        { text: "‡∏°‡∏µ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà?" },
        { text: "‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏¢ ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏´‡∏°?" },
        { text: "‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
        { text: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°?" },
        { text: "‡∏°‡∏µ‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
        { text: "‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°?" },
        { text: "‡∏°‡∏µ‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏Å‡∏£‡∏ì‡∏µ‡πÇ‡∏£‡∏Ñ‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
        { text: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°?" },
        { text: "‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
        { text: "‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?" },
        { text: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°?" },
        { text: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏¢‡∏≠‡∏∞‡∏à‡∏±‡∏á ‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏Å‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏°‡∏±‡∏¢" },
        { text: "‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÜ‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢" },
        { text: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏à‡∏±‡∏á ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡πÇ‡∏à‡∏ó‡∏¢‡πå" },
        { text: "‡∏Ñ‡πà‡∏≤‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡πÅ‡∏û‡∏á‡∏à‡∏±‡∏á" },
        { text: "‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ ‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÅ‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô" },
        { text: "‡∏Ç‡∏≠‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏û‡πà‡∏≠ ‡πÅ‡∏°‡πà ‡πÅ‡∏ü‡∏ô ‡∏î‡∏π‡∏Å‡πà‡∏≠‡∏ô" },
        { text: "‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏¢‡∏≠‡∏∞" },
        { text: "‡∏Ç‡∏≠‡∏Ñ‡∏¥‡∏î‡∏î‡∏π‡∏Å‡πà‡∏≠‡∏ô" },
        { text: "‡∏Å‡∏•‡∏±‡∏ß‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô ‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏Ñ‡∏•‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ" },
        { text: "‡∏°‡∏µ‡πÄ‡∏¢‡∏≠‡∏∞‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏Ñ‡πà‡∏ü‡∏±‡∏á‡πÜ‡∏î‡∏π‡∏Å‡πà‡∏≠‡∏ô" },
        { text: "‡∏ó‡∏≥‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏¢‡∏≤‡∏Å ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏∞‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏Ñ‡∏£‡πÄ‡∏ß‡∏•‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå" },
        { text: "‡∏ó‡∏µ‡πà‡∏û‡∏π‡∏î‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏≠" },
        { text: "‡πÑ‡∏°‡πà‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö‡∏ã‡∏∑‡πâ‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" },
        { text: "‡πÑ‡∏î‡πâ‡∏Å‡∏≥‡πÑ‡∏£‡∏ô‡πâ‡∏≠‡∏¢ ‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô ‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏à‡∏∏‡∏î‡∏Ñ‡∏∏‡πâ‡∏°‡∏ó‡∏∏‡∏ô" },
        { text: "‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏õ‡∏Å‡πá‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ" },
        { text: "‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÜ ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡∏Å‡πà‡∏≠‡∏ô" },
        { text: "‡∏ü‡∏±‡∏á‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏•‡∏¢" },
        { text: "‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß" },
        { text: "‡∏´‡∏±‡∏Å‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏µ‡πÄ‡∏ï‡πá‡∏°" },
        { text: "‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏ó‡∏ô" },
        { text: "‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏ß‡πâ‡∏´‡∏°‡∏î‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡πâ‡∏ß" }
      ],
      part3: [
        { text: "‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡πÅ‡∏û‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡∏Ç‡∏≠‡∏Ñ‡∏¥‡∏î‡∏î‡∏π‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡πÑ‡∏°‡πà‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡∏Å‡∏•‡∏±‡∏ß‡∏ñ‡∏π‡∏Å‡∏´‡∏•‡∏≠‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏ú‡∏π‡∏Å‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡πÑ‡∏°‡πà‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
        { text: "‡∏¢‡∏±‡∏á‡πÜ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏ô‡∏∞" },
        { text: "‡∏Ç‡∏≠‡∏î‡∏π‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Å‡πà‡∏≠‡∏ô ‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏î‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å" },
        { text: "‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÄ‡∏•‡∏¢‡∏´‡∏£‡∏≠" },
        { text: "‡∏Ñ‡∏¥‡∏î‡∏î‡∏π‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡∏Å‡∏ß‡∏±‡∏ô 2‡∏ß‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏°‡∏±‡∏¢" },
        { text: "‡∏Ç‡∏≠‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞" },
        { text: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ" },
        { text: "‡πÇ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡∏ï‡∏±‡∏î‡∏™‡∏¥‡πâ‡∏ô‡πÉ‡∏à‡πÅ‡∏ó‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏ü‡∏ô" },
        { text: "‡∏£‡∏≠‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô" }
      ]
    };

    let currentPart = "part1";
    let shuffledQuestions = [];
    let currentIndex = 0;
    let mediaRecorder;
    let audioChunks = [];

    function shuffle(array) {
      let shuffled = [...array];
      for (let i = shuffled.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
      }
      return shuffled;
    }

    window.startPart = function(partName) {
      currentPart = partName;
      shuffledQuestions = shuffle(questions[partName]);
      currentIndex = 0;
      loadQuestion();
    }

    function getSectionTitle(part) {
      switch (part) {
        case "part1": return "‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÇ‡∏ô‡πâ‡∏°‡∏ô‡πâ‡∏≤‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏ï‡πâ‡∏ô‡∏™‡∏≤‡∏¢";
        case "part2": return "‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏±‡∏á‡∏ß‡∏•‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á";
        case "part3": return "‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3: ‡πÇ‡∏ô‡πâ‡∏°‡∏ô‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢";
        default: return "";
      }
    }

    function loadQuestion() {
      const q = shuffledQuestions[currentIndex];
      document.getElementById("section-title").textContent = getSectionTitle(currentPart);
      document.getElementById("question-text").textContent = q.text;
      document.getElementById("employee-response").src = "";
      document.getElementById("download-link").href = "#";
    }

    window.nextQuestion = function() {
      currentIndex++;
      if (currentIndex < shuffledQuestions.length) {
        loadQuestion();
      } else {
        alert("‡∏à‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ");
      }
    }

    window.startRecording = async function() {
      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
      mediaRecorder = new MediaRecorder(stream);
      mediaRecorder.start();
      audioChunks = [];

      mediaRecorder.ondataavailable = event => {
        audioChunks.push(event.data);
      };

      mediaRecorder.onstop = async () => {
        const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });
        const audioUrl = URL.createObjectURL(audioBlob);
        document.getElementById("employee-response").src = audioUrl;
        document.getElementById("download-link").href = audioUrl;

        const filename = `response_${uuidv4()}.webm`;
        const { error } = await supabase.storage
          .from('responses')
          .upload(filename, audioBlob, {
            contentType: 'audio/webm',
            upsert: true
          });

        if (error) {
          console.error("Upload failed:", error.message);
          alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á");
        } else {
          console.log("Upload success:", filename);
        }
      };
    }

    window.stopRecording = function() {
      if (mediaRecorder && mediaRecorder.state !== "inactive") {
        mediaRecorder.stop();
      }
    }

    window.startPart("part1");
  </script>
<div id="testContainer" style="display:none;"></div>
<div class="text-center mt-4">
<a class="btn btn-outline-light" download="answers.txt" id="downloadTextBtn" style="display:none;">‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö (.txt)</a>
</div>
<script>
let userName = "";
let answers = [];
let currentQuestionIndex = 0;
let questions = [];
let audioBlob = null;

const part1 = [
  { text: "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏ï‡πâ‡∏ô‡∏™‡∏≤‡∏¢" },
  { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡∏∏‡∏¢‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
  { text: "‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏™‡∏≤‡∏¢‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
  { text: "‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
  { text: "‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞" },
  { text: "‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏ß‡∏•‡∏≤" },
  { text: "‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" },
  { text: "‡πÑ‡∏°‡πà‡πÑ‡∏ß‡πâ‡πÉ‡∏à‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå" },
  { text: "‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß" },
  { text: "‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ" },
  { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà" },
  { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ç‡∏±‡∏ö‡∏£‡∏ñ‡∏≠‡∏¢‡∏π‡πà" },
  { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡∏∏‡∏¢‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ä‡πâ‡∏≤" },
  { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÇ‡∏ó‡∏£‡∏°‡∏≤‡∏ö‡πà‡∏≠‡∏¢‡∏°‡∏≤‡∏Å" },
  { text: "‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å ‡πÑ‡∏°‡πà‡∏ü‡∏±‡∏á" },
  { text: "‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏°‡∏µ‡πÄ‡∏¢‡∏≠‡∏∞‡πÅ‡∏•‡πâ‡∏ß" },
  { text: "‡πÉ‡∏Ñ‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏°‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠" },
  { text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß" },
  { text: "‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï" },
  { text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏õ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß" },
  { text: "‡∏°‡∏¥‡∏à‡∏â‡∏≤‡∏ä‡∏µ‡∏û‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡πà‡∏≤‡∏ß" }
];

function shuffle(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1)];
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

function startTest() {
  userName = document.getElementById("userNameInput").value.trim();
  if (!userName) {
    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö");
    return;
  }
  document.getElementById("userFormContainer").style.display = "none";
  document.getElementById("testContainer").style.display = "block";
  questions = shuffle(part1).slice(0, 10);
  currentQuestionIndex = 0;
  answers = [];
  showQuestion();
}

function showQuestion() {
  const container = document.getElementById("testContainer");
  container.innerHTML = `
    <div class="card text-white bg-dark p-4 animate__animated animate__fadeIn">
      <h5 class="mb-3">‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà ${currentQuestionIndex + 1} / ${questions.length}</h5>
      <p class="lead">${questions[currentQuestionIndex].text}</p>
      <div class="d-flex justify-content-between mt-3">
        <button class="btn btn-secondary" onclick="prevQuestion()" ${currentQuestionIndex === 0 ? 'disabled' : ''}>‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</button>
        <button class="btn btn-primary" onclick="nextQuestion()">‡∏ñ‡∏±‡∏î‡πÑ‡∏õ</button>
      </div>
      <div class="mt-4">
        <button id="startRecord" class="btn btn-danger me-2">üéô ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á</button>
        <button id="stopRecord" class="btn btn-warning me-2" disabled>‚èπ ‡∏´‡∏¢‡∏∏‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
        <a id="downloadAudio" class="btn btn-success me-2" style="display:none;">‚¨á ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á</a>
        <audio id="audioPreview" controls style="display:none;"></audio>
      </div>
    </div>
  `;
  setupRecording();
}

function prevQuestion() {
  if (currentQuestionIndex > 0) {
    currentQuestionIndex--;
    showQuestion();
  }
}

function nextQuestion() {
  if (currentQuestionIndex < questions.length - 1) {
    currentQuestionIndex++;
    showQuestion();
  } else {
    saveResults();
  }
}

function saveResults() {
  const timestamp = new Date().toISOString();
  const audioUrl = document.getElementById("downloadAudio").href || "";
  const answerText = questions.map((q, i) => `${i + 1}. ${q.text}`).join("\n");
  const blob = new Blob([answerText], { type: "text/plain" });
  const textUrl = URL.createObjectURL(blob);
  const textLink = document.getElementById("downloadTextBtn");
  textLink.href = textUrl;
  textLink.style.display = "inline-block";

  const record = {
    name: userName,
    total: questions.length,
    audio: audioUrl,
    text: textUrl,
    time: timestamp
  };

  const records = JSON.parse(localStorage.getItem("testRecords") || "[]");
  records.push(record);
  localStorage.setItem("testRecords", JSON.stringify(records));
  alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

function setupRecording() {
  let mediaRecorder;
  let recordedChunks = [];
  const startBtn = document.getElementById("startRecord");
  const stopBtn = document.getElementById("stopRecord");
  const downloadBtn = document.getElementById("downloadAudio");
  const audioPreview = document.getElementById("audioPreview");

  startBtn.onclick = async () => {
    recordedChunks = [];
    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
    mediaRecorder = new MediaRecorder(stream);
    mediaRecorder.ondataavailable = e => {
      if (e.data.size > 0) recordedChunks.push(e.data);
    };
    mediaRecorder.onstop = () => {
      const blob = new Blob(recordedChunks, { type: "audio/webm" });
      const url = URL.createObjectURL(blob);
      downloadBtn.href = url;
      downloadBtn.download = "recorded_audio.webm";
      downloadBtn.style.display = "inline-block";
      audioPreview.src = url;
      audioPreview.style.display = "block";
    };
    mediaRecorder.start();
    startBtn.disabled = true;
    stopBtn.disabled = false;
  };

  stopBtn.onclick = () => {
    mediaRecorder.stop();
    startBtn.disabled = false;
    stopBtn.disabled = true;
  };
}

document.addEventListener("DOMContentLoaded", () => {
  document.getElementById("startTestBtn").addEventListener("click", startTest);
});
</script>
<script type="module">
import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
import { v4 as uuidv4 } from 'https://cdn.jsdelivr.net/npm/uuid@8.3.2/dist/esm-browser/index.js';

// Supabase Configuration
const supabaseUrl = 'https://wzwyotzzxycqfwercakh.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind6d3lvdHp6eHljcWZ3ZXJjYWtoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwNTg3MTMsImV4cCI6MjA3MjYzNDcxM30.lgiAf9oBUqsaWGb3u_80wuoKAODQHE_lIBxpGumhrno';
const supabase = createClient(supabaseUrl, supabaseKey);

// Global variables
let audioBlobs = {};
let mediaRecorder;
let audioStream;
let currentUser = '';
let currentPartIndex = 1;
let questions = [
    "‡∏ó‡∏≥‡πÑ‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û?",
    "‡∏´‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?",
    "‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢?",
    "‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÇ‡∏ô‡πâ‡∏°‡∏ô‡πâ‡∏≤‡∏ß‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏±‡∏á‡πÄ‡∏•‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?",
    "‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?"
];

// DOM elements
const toast = document.createElement('div');
toast.style.position = 'fixed';
toast.style.bottom = '20px';
toast.style.right = '20px';
toast.style.padding = '10px 20px';
toast.style.backgroundColor = '#4CAF50';
toast.style.color = 'white';
toast.style.borderRadius = '5px';
toast.style.display = 'none';
document.body.appendChild(toast);

function showToast(message) {
    toast.textContent = message;
    toast.style.display = 'block';
    setTimeout(() => { toast.style.display = 'none'; }, 3000);
}

// Randomize question
function getRandomQuestion() {
    return questions[Math.floor(Math.random() * questions.length)];
}

// Start recording
async function startRecording() {
    audioStream = await navigator.mediaDevices.getUserMedia({ audio: true });
    mediaRecorder = new MediaRecorder(audioStream);
    let chunks = [];
    mediaRecorder.ondataavailable = e => chunks.push(e.data);
    mediaRecorder.onstop = () => {
        const blob = new Blob(chunks, { type: 'audio/webm' });
        audioBlobs[currentPartIndex] = blob;
        showToast('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    };
    mediaRecorder.start();
}

// Stop recording
function stopRecording() {
    if (mediaRecorder && mediaRecorder.state !== 'inactive') {
        mediaRecorder.stop();
        audioStream.getTracks().forEach(track => track.stop());
    }
}

// Upload audio to Supabase
async function uploadAudio(partIndex) {
    const blob = audioBlobs[partIndex];
    const filename = `${currentUser}_part${partIndex}_${uuidv4()}.webm`;
    const { data, error } = await supabase.storage.from('test-audio').upload(filename, blob, { upsert: true });
    if (error) {
        console.error('Upload error:', error);
        return null;
    }
    const { data: urlData } = await supabase.storage.from('test-audio').getPublicUrl(filename);
    return urlData.publicUrl;
}

// Upload answer file to Supabase
async function uploadAnswerFile(textContent) {
    const blob = new Blob([textContent], { type: 'text/plain' });
    const filename = `${currentUser}_answers_${uuidv4()}.txt`;
    const { data, error } = await supabase.storage.from('test-answers').upload(filename, blob, { upsert: true });
    if (error) {
        console.error('Upload error:', error);
        return null;
    }
    const { data: urlData } = await supabase.storage.from('test-answers').getPublicUrl(filename);
    return urlData.publicUrl;
}

// Save result to Supabase table
async function saveTestResult(audioUrl, answerUrl) {
    const { error } = await supabase.from('test_results').insert([{
        name: currentUser,
        total_parts: Object.keys(audioBlobs).length,
        audio_url: audioUrl,
        answer_url: answerUrl,
        timestamp: new Date().toISOString()
    }]);
    if (!error) showToast('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}

// Example usage
document.addEventListener('DOMContentLoaded', () => {
    const startBtn = document.getElementById('start-btn');
    const stopBtn = document.getElementById('stop-btn');
    const uploadBtn = document.getElementById('upload-btn');
    const nameInput = document.getElementById('name-input');
    const questionBox = document.getElementById('question-box');
    const answerInput = document.getElementById('answer-input');

    startBtn.onclick = () => {
        currentUser = nameInput.value || 'anonymous';
        questionBox.textContent = getRandomQuestion();
        startRecording();
    };

    stopBtn.onclick = () => {
        stopRecording();
    };

    uploadBtn.onclick = async () => {
        const audioUrl = await uploadAudio(currentPartIndex);
        const answerUrl = await uploadAnswerFile(answerInput.value);
        await saveTestResult(audioUrl, answerUrl);
    };
});
</script>

</body>
</html>